<adonisControls:AdonisWindow x:Class="pocgen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pocgen"
        xmlns:helpers="clr-namespace:ppedv.pocgen.UI.WPF.Helpers"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:vm="clr-namespace:ppedv.pocgen.UI.WPF.ViewModels"
        xmlns:h="clr-namespace:pocgen.Helpers"
        mc:Ignorable="d" IconVisibility="Hidden"
        Title="ppedv Kursgenerator" Height="800" Width="800" PlaceTitleBarOverContent="True"  ShrinkTitleBarWhenMaximized="True">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="bool2vis"/>
        <h:IsEqualConverter x:Key="equalConverter"/>
    </Window.Resources>

    <adonisControls:AdonisWindow.TitleBarContent>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0">
            <Button Style="{DynamicResource {x:Static adonisUi:Styles.AccentToolbarButton}}"
                                    Content="Info"
                                    Click="ShowInfoText"/>
            <Button Style="{DynamicResource {x:Static adonisUi:Styles.AccentToolbarButton}}"
                                    Content="About"
                                    Click="ShowAboutText"/>
            <Button Content="Light/Darkmode"
                                    Style="{DynamicResource {x:Static adonisUi:Styles.AccentToolbarButton}}"
                                    Click="ChangeTheme"/>

        </StackPanel>


    </adonisControls:AdonisWindow.TitleBarContent>


    <ScrollViewer  Margin="0,20,0,0">

        <Grid x:Name="gridContent" Grid.Column="1" ClipToBounds="True" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Margin="0,0,0,5">
                <GroupBox.Header>
                    <TextBlock Text="Schritt 1: Stammverzeichnis der Präsentationen wählen:"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Content="Ordner auswählen" Command="{Binding ButtonSelectRootFolderClickCommand}"/>
                    <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding PresentationRootFolderPath,StringFormat='Ordner: {0}'}"/>
                    <ContentControl Grid.Column="2" Height="22" Visibility="{Binding IsGeneratingPreview,Converter={StaticResource bool2vis}}"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="1" MinHeight="200" IsEnabled="{Binding IsValidPresentationRootFolderSelected}" Margin="0,5">
                <GroupBox.Header>
                    <TextBlock Text="Schritt 2: Präsentationen auswählen:" Margin="{adonisUi:Space 1}"/>
                </GroupBox.Header>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Padding="0" MinHeight="200" Grid.Column="0" Margin="0,0,5,0">
                        <GroupBox.Header>
                            <TextBlock Text="Zu bearbeitende Dateien auswählen:" Margin="{adonisUi:Space 1}"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,20,0" >
                                <ItemsControl x:Name="listViewPresentations" ItemsSource="{Binding PowerPointPresentations}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding IsIncluded}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}, Path=DataContext.ResetPreviewCommand}"/>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="Unchecked">
                                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}, Path=DataContext.ResetPreviewCommand}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </CheckBox>
                                                <TextBlock Text="{Binding FileName}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>

                            <Button Grid.Row="1" Grid.Column="0" Content="Alle auswählen"  Margin="5,5,20,5" Command="{Binding ButtonSelectAllPresentationsClickCommand}" />
                            <Button Grid.Row="1" Grid.Column="1" Content="Alle abwählen"  Margin="5,5,20,5" Command="{Binding ButtonUnselectAllPresentationsClickCommand}" />
                        </Grid>
                    </GroupBox>

                    <GridSplitter Grid.Column="1" Background="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"/>

                    <GroupBox Padding="0" MinHeight="200" Grid.Column="2" Margin="5,0,0,0" >
                        <GroupBox.Header>
                            <TextBlock Text="Vorschau:" Margin="{adonisUi:Space 1}"/>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" BorderBrush="Black" BorderThickness="1.5" Margin="10">
                                <Image Source="{Binding PreviewSource}" />
                            </Border>
                            <Button Grid.Row="1" Grid.Column="0" Content="&lt;"  Margin="5" Command="{Binding PreviewBackwardCommand}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CurrentSlide}" Value="1">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CurrentSlide}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="CurrentSlide"/>
                                        <Binding Path="MaximumSlides"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Button Grid.Row="1" Grid.Column="2" Content="&gt;"  Margin="5" Command="{Binding PreviewForwardCommand}" >
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMaximumReached}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Slider Grid.Row="2" Grid.ColumnSpan="3" Minimum="1" Maximum="{Binding MaximumSlides}" Value="{Binding CurrentSlide}"
                                            TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" Margin="10,0,10,10"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="2"  Margin="0,5">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAtLeastOnePresentationSelected}" Value="True">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding GeneratorIsWorking}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <GroupBox.Header>
                    <TextBlock Text="Aktionen"/>
                </GroupBox.Header>
                <StackPanel>
                    <Button Content="Aus allen Präsentationen eine PDF-Datei generieren" Command="{Binding GeneratePresentationPDFCommand}"  Margin="5,5,20.333,5" FontWeight="Bold" />
                    <Button Content="Aus allen Präsentationen ein Word-Dokument generieren und als Word-Dokument speichern" Command="{Binding ButtonStartClickCommand}" Margin="5,5,20.333,5" />
                    <Button Content="Aus allen Präsentationen ein Word-Dokument generieren und als PDF speichern" Command="{Binding GeneratePOC_PDFCommand}" Margin="5,5,20,5" />
                    <Button Content="Alle Präsentationen zu einer einzelnen Powerpoint-Präsentation zusammenfassen" Command="{Binding MergePresentationsCommand}"  Margin="5,5,20,5" />
                    <ContentControl Visibility="{Binding GeneratorIsWorking,Converter={StaticResource bool2vis}}" Height="20" Width="20"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="3" Margin="0,5,0,0" Header="Upload">
                <TextBlock>//todo</TextBlock>
            </GroupBox>
        </Grid>



    </ScrollViewer>
</adonisControls:AdonisWindow>
