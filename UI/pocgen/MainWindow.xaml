<Window x:Class="pocgen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pocgen"
        xmlns:helpers="clr-namespace:ppedv.pocgen.UI.WPF.Helpers"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:vm="clr-namespace:ppedv.pocgen.UI.WPF.ViewModels"
        mc:Ignorable="d"
        Title="ppedv Kursgenerator" Height="600" Width="800">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="bool2vis"/>
        <!--<Style TargetType="TextBlock" x:Key="textBlockDescriptionStyle">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontFamily" Value="Sylfaen"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button" x:Key="defaultButtonStyle">
            <Setter Property="Margin" Value="50"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontFamily" Value="Sylfaen"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            BorderBrush="{TemplateBinding Foreground}"
                            CornerRadius="25"
                            Padding="10"
                            BorderThickness="10"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightCoral"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="NavigateToFolderSelection">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="gridGenerate">
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,500,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="gridSelectModules">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,500,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="gridSelectPresentationFolder">
                <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="NavigateToModuleSelection">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="gridSelectModules">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,500,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="NavigateToGenerate">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="gridGenerate">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,500,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>-->
    </Window.Resources>
    <!--<Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="buttonGoToSelectModules">
            <BeginStoryboard x:Name="NavigateToModuleSelection_BeginStoryboard" Storyboard="{StaticResource NavigateToModuleSelection}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="buttonGoToGenerate">
            <BeginStoryboard x:Name="NavigateToGenerate_BeginStoryboard" Storyboard="{StaticResource NavigateToGenerate}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="buttonReset">
            <BeginStoryboard x:Name="NavigateToFolderSelection_BeginStoryboard" Storyboard="{StaticResource NavigateToFolderSelection}"/>
        </EventTrigger>
    </Window.Triggers>-->

    <Grid x:Name="gridRoot">
        <DockPanel LastChildFill="True"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch">
            <Grid x:Name="gridNavigation" DockPanel.Dock="Top">
                <Border Background="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
                        adonisExtensions:LayerExtension.Layer="3"
                        VerticalAlignment="Top">
                    <DockPanel LastChildFill="False">
                        <UniformGrid DockPanel.Dock="Right"
                                     Columns="2"
                                     Margin="{adonisUi:Space 1}">
                            <Button Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                                    Content="Previous"
                                    Command="{Binding PreviousViewCommand}"
                                    Margin="{adonisUi:Space 1, 0, 0, 0}"/>
                            <Button Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                                    Content="Next"
                                    Command="{Binding NextViewCommand}"/>
                        </UniformGrid>

                    </DockPanel>

                </Border>
            </Grid>

            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem Content="Ready"/>
            </StatusBar>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <GroupBox Padding="0"
                              MinWidth="132">
                        <GroupBox.Header>
                            <TextBlock Text="Actions"
                                       Margin="{adonisUi:Space 1}"/>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical"
                                    Margin="{adonisUi:Space 0, 1, 0, 0}">
                            <Button Content="Change Theme"
                                    Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}"
                                    HorizontalAlignment="Stretch"
                                    Padding="8"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
                <Grid Grid.Column="1"
                      ClipToBounds="True">
                    <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button Content="Ordner auswählen" Command="{Binding ButtonSelectRootFolderClickCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Background" Value="LightBlue"/>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="buttonGoToSelectModules" Content="Weiter">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Background" Value="LightBlue"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsValidPresentationRootFolderSelected}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>-->

                </Grid>
            </Grid>
        </DockPanel>
        <Grid x:Name="gridHeader"
              HorizontalAlignment="Center"
              VerticalAlignment="Top">
            <Viewbox Stretch="Fill"
                     Height="46"
                     Width="192">
                <Viewbox.Effect>
                    <DropShadowEffect ShadowDepth="2"
                                      BlurRadius="10"
                                      Opacity="0.2"/>
                </Viewbox.Effect>
                <Path Data="M 0 0 L 20 0 L 18 8 L 2 8 Z"
                      Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"/>
            </Viewbox>
            <TextBlock Text="pocgen"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}"
                       FontSize="14"/>
        </Grid>
    </Grid>


    <!--<TabControl>
        <TabItem Header="Word-Dokumentation generieren">
            <Grid x:Name="gridRoot" IsEnabled="{Binding UIElementsEnabled}">
                <Grid x:Name="gridSelectPresentationFolder" Margin="0,0,0,0">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.362,1.085" StartPoint="0.37,-0.594">
                            <GradientStop Color="#FF111971" Offset="0"/>
                            <GradientStop Color="#FF00F0FD" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button Content="Ordner auswählen" Command="{Binding ButtonSelectRootFolderClickCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Background" Value="LightBlue"/>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button x:Name="buttonGoToSelectModules" Content="Weiter">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Background" Value="LightBlue"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsValidPresentationRootFolderSelected}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid x:Name="gridSelectModules" Margin="0,500,0,0">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.362,1.085" StartPoint="0.37,-0.594">
                            <GradientStop Color="#FF076312" Offset="0"/>
                            <GradientStop Color="#FF32EA90" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel Margin="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center" Text="Dateien auswählen: " Style="{StaticResource textBlockDescriptionStyle}" />
                        <ListView x:Name="listViewPresentations" ItemsSource="{Binding PowerPointPresentations}" Height="150" Opacity="0.8" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid ToolTip="{Binding FullPath}" ToolTipService.ShowOnDisabled="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox IsChecked="{Binding IsIncluded}" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Label Content="{Binding FileName}"  Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="Alle auswählen" FontSize="20" Margin="5" Command="{Binding ButtonSelectAllPresentationsClickCommand}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Content="Alle abwählen"  FontSize="20" Margin="5" Command="{Binding ButtonUnselectAllPresentationsClickCommand}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <Button x:Name="buttonGoToGenerate"  Content="Weiter" Visibility="{Binding IsAtLeastOnePresentationSelected, Converter={StaticResource bool2vis},Mode=OneWay}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="Background" Value="LightGreen"/>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid x:Name="gridGenerate" Margin="0,500,0,0">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.362,1.085" StartPoint="0.37,-0.594">
                            <GradientStop Color="#FFFA0000" Offset="0"/>
                            <GradientStop Color="#FFEECECE" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button Content="Start" Command="{Binding ButtonStartClickCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="Background" Value="LightGoldenrodYellow"/>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button x:Name="buttonReset" Content="Zurück zum Anfang" Command="{Binding ButtonResetClickCommand}" >
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource defaultButtonStyle}">
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="Background" Value="LightGoldenrodYellow"/>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </TabItem>
    </TabControl>-->
</Window>
